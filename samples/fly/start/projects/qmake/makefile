#############################################################################
# Makefile for building: ../../../../fly/projects/qmake/simple
# Generated by qmake (1.07a) (Qt 3.3.6) on: Mon Aug 14 13:47:12 2006
# Project:  lib.pro
# Template: app
# Command: $(QMAKE) -o makefile lib.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g  -DIS_OGRE -DDEBUG_LEVEL_2 -D_SeOgreExport= -D_SeClientExport= -D_SeCoreExport= -D_SimpleUiExport= -D_SimpleLogicExport= -D_FlyUiExport= -D_FlyLogicExport= -D_GameUiExport= -D_GameLogicExport=
CXXFLAGS = -pipe -g  -DIS_OGRE -DDEBUG_LEVEL_2 -D_SeOgreExport= -D_SeClientExport= -D_SeCoreExport= -D_SimpleUiExport= -D_SimpleLogicExport= -D_FlyUiExport= -D_FlyLogicExport= -D_GameUiExport= -D_GameLogicExport=
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I../../../../../core/include -I../../../../../core/src -I../../../../../add_on/client/include -I../../../../../add_on/client/src -I../../../../../add_on/angelscript/include -I../../../../../add_on/angelscript/src -I../../../../../add_on/ogre/include -I../../../../../add_on/ogre/src -I../../../ogre_ui/include -I../../../ogre_ui/src -I/home/rune/svn/sf/samples/simple/logic/include -I../../../logic/src -I../../../../fly/ogre_ui/include -I../../../../fly/ogre_ui/src -I/home/rune/svn/sf/samples/fly/logic/include -I../../../../fly/logic/src -I../../src -I/usr/local/include/CEGUI -I/usr/local/include/OGRE -I../../src -I. -I../../src
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS)  -lgame_logic -lgame_ogre_ui -lse_ogre -lse_client -lse_core -L/home/rune/svn/sf/samples/fly/projects/qmake -lOgreMain -lCEGUIOgreRenderer -lCEGUIBase
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = ../../src/Application.hpp
SOURCES = ../../src/Start.cpp \
		../../src/Application.cpp
OBJECTS = Start.o \
		Application.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = ../../../../../env/qmake/env.pro \
		../../../../fly/projects/qmake/proj.pro \
		../../../../../env/qmake/proj.pro \
		src.pro \
		lib.pro
QMAKE_TARGET = simple
DESTDIR  = ../../../../fly/projects/qmake/
TARGET   = ../../../../fly/projects/qmake/simple

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	test -d ../../../../fly/projects/qmake/ || mkdir -p ../../../../fly/projects/qmake/
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

makefile: lib.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf ../../../../../env/qmake/env.pro \
		../../../../fly/projects/qmake/proj.pro \
		../../../../../env/qmake/proj.pro \
		src.pro
	$(QMAKE) -o makefile lib.pro
qmake: 
	@$(QMAKE) -o makefile lib.pro

dist: 
	@mkdir -p .tmp/simple && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/simple/ && ( cd `dirname .tmp/simple` && $(TAR) simple.tar simple && $(GZIP) simple.tar ) && $(MOVE) `dirname .tmp/simple`/simple.tar.gz . && $(DEL_FILE) -r .tmp/simple

mocclean:
uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../../../../fly/projects/qmake/$(TARGET) $(TARGET)


FORCE:

####### Compile

Start.o: ../../src/Start.cpp ../../src/Application.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Start.o ../../src/Start.cpp

Application.o: ../../src/Application.cpp ../../src/Application.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Application.o ../../src/Application.cpp

####### Install

install:  

uninstall:  

